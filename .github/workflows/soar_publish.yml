name: Splunk SOAR publish

on:
  push:
    branches:
      - qua
      - main

jobs:
  soar_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Ensures the entire repo history is available

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python requirements
        run: pip install -r utils/requirements.txt

      - name: Gather and Publish All Objects to Splunk SOAR Cloud
        env:
          SOAR_QUA_DEST_API_URL: ${{ secrets.SOAR_QUA_DEST_API_URL }}
          SOAR_QUA_DEST_API_TOKEN: ${{ secrets.SOAR_QUA_DEST_API_TOKEN }}
          SOAR_QUA_DEST_SCM_NAME: ${{ secrets.SOAR_QUA_DEST_SCM_NAME }}
          SOAR_PROD_DEST_API_URL: ${{ secrets.SOAR_PROD_DEST_API_URL }}
          SOAR_PROD_DEST_API_TOKEN: ${{ secrets.SOAR_PROD_DEST_API_TOKEN }}
          SOAR_PROD_DEST_SCM_NAME: ${{ secrets.SOAR_PROD_DEST_SCM_NAME }}
        run: |
          echo "Branch: ${{ github.ref }}"

          # Set API parameters based on the branch
          if [[ "${{ github.ref }}" == "refs/heads/qua" ]]; then
              DEST_API_URL=$SOAR_QUA_DEST_API_URL
              DEST_API_TOKEN=$SOAR_QUA_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_QUA_DEST_SCM_NAME
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              DEST_API_URL=$SOAR_PROD_DEST_API_URL
              DEST_API_TOKEN=$SOAR_PROD_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_PROD_DEST_SCM_NAME
          else
              echo "Invalid branch. Exiting."
              exit 1
          fi

          # Find all playbook and custom function files
          find . -type f \( -name '*.json' -o -name '*.py' \) | sort > files_list.txt
          cat files_list.txt

          # Process each pair found
          while read -r file; do
              # Assume all files are valid since we check pairs in repository structure
              python3 utils/soar_publish.py --input_file "$file" --dest_target="$DEST_API_URL" --dest_token="$DEST_API_TOKEN" --dest_scm_name="$DEST_SCM_NAME" --object_type "determine_from_file_path"
          done < files_list.txt
