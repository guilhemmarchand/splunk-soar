name: Splunk SOAR publish

on:
  push:
    branches:
      - qua
      - main

jobs:
  soar_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python requirements
        run: pip install -r utils/requirements.txt

      - name: Gather and Publish Paired Objects to Splunk SOAR Cloud
        env:
          SOAR_QUA_DEST_API_URL: ${{ env.SOAR_QUA_DEST_API_URL }}
          SOAR_QUA_DEST_API_TOKEN: ${{ secrets.SOAR_QUA_DEST_API_TOKEN }}
          SOAR_QUA_DEST_SCM_NAME: ${{ env.SOAR_QUA_DEST_SCM_NAME }}
          SOAR_PROD_DEST_API_URL: ${{ env.SOAR_PROD_DEST_API_URL }}
          SOAR_PROD_DEST_API_TOKEN: ${{ secrets.SOAR_PROD_DEST_API_TOKEN }}
          SOAR_PROD_DEST_SCM_NAME: ${{ env.SOAR_PROD_DEST_SCM_NAME }}
        run: |
          echo "Branch: ${{ github.ref }}"

          # Set API parameters based on the branch
          if [[ "${{ github.ref }}" == "refs/heads/qua" ]]; then
              DEST_API_URL=$SOAR_QUA_DEST_API_URL
              DEST_API_TOKEN=$SOAR_QUA_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_QUA_DEST_SCM_NAME
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              DEST_API_URL=$SOAR_PROD_DEST_API_URL
              DEST_API_TOKEN=$SOAR_PROD_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_PROD_DEST_SCM_NAME
          else
              echo "Invalid branch. Exiting."
              exit 1
          fi

          # Collect all .json and .py files and sort them
          find . -type f \( -name '*.json' -o -name '*.py' \) | sort > files_list.txt

          # Process each matched pair found
          while IFS= read -r json_file; do
              # Corresponding Python file
              py_file="${json_file%.json}.py"
              
              # Check if both files exist
              if [[ -f "$json_file" && -f "$py_file" ]]; then
                  echo "Processing $json_file and $py_file"
                  # Call the Python script to import both files as they are a complete set
                  python3 utils/soar_publish.py --input_file "$json_file" --dest_target="$DEST_API_URL" --dest_token="$DEST_API_TOKEN" --dest_scm_name="$DEST_SCM_NAME"
                  python3 utils/soar_publish.py --input_file "$py_file" --dest_target="$DEST_API_URL" --dest_token "$DEST_API_TOKEN" --dest_scm_name "$DEST_SCM_NAME"
              else
                  echo "Skipping incomplete set: $json_file does not have a matching $py_file"
              fi
          done < <(grep '\.json$' files_list.txt)
