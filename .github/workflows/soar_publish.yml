name: Splunk SOAR publish

on:
  push:
    branches:
      - testing
      - main

jobs:
  soar_publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - run: echo "job automatically triggered by a ${{ github.event_name }} event."

      # required to access full git Metadata
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install required Python modules
      - name: Install Python requirements
        run: |
          pip install -r utils/requirements.txt

      - name: Publish Git commits to Splunk SOAR Cloud
        env:
          SOAR_TESTING_DEST_API_URL: ${{ vars.SOAR_TESTING_DEST_API_URL }}
          SOAR_TESTING_DEST_API_TOKEN: ${{ secrets.SOAR_TESTING_DEST_API_TOKEN }}
          SOAR_TESTING_DEST_SCM_NAME: ${{ vars.SOAR_TESTING_DEST_SCM_NAME }}
          SOAR_PROD_DEST_API_URL: ${{ vars.SOAR_PROD_DEST_API_URL }}
          SOAR_PROD_DEST_API_TOKEN: ${{ secrets.SOAR_PROD_DEST_API_TOKEN }}
          SOAR_PROD_DEST_SCM_NAME: ${{ vars.SOAR_PROD_DEST_SCM_NAME }}
        run: |
          echo "Inspecting git branch ${{ github.ref }}"
          echo "Inspecting git commit ${{ github.sha }}"

          # Branch environment setup
          if [[ "${{ github.ref }}" == "refs/heads/testing" ]]; then
              echo "Environment target is Testing"
              DEST_API_URL=$SOAR_TESTING_DEST_API_URL
              DEST_API_TOKEN=$SOAR_TESTING_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_TESTING_DEST_SCM_NAME
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "Environment target is Production"
              DEST_API_URL=$SOAR_PROD_DEST_API_URL
              DEST_API_TOKEN=$SOAR_PROD_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_PROD_DEST_SCM_NAME
          else
              echo "Invalid branch. Exiting."
              exit 1
          fi

          commit_parents=$(git log --pretty=%P -n 1 ${{ github.sha }})
          if [[ $(echo $commit_parents | wc -w) -gt 1 ]]; then
              modified_files=$(git diff --name-only ${commit_parents[0]} ${commit_parents[1]})
          else
              modified_files=$(git show --name-only --pretty="" ${{ github.sha }})
          fi

          mapfile -t files_array < <(echo "$modified_files" | grep -E '\.json$|\.py$')

          # Loop through pairs of files
          for file in "${files_array[@]}"; do
              base_name="${file%.*}" # strip extension

              if [[ "$file" =~ \.json$ && " ${files_array[*]} " =~ " $base_name.py " ]]; then
                  paired_files=("$file" "$base_name.py")
                  OBJECT_TYPE=$(echo "$file" | grep -q 'custom_functions/' && echo "custom_function" || echo "playbook")

                  tarball_path="/tmp/${base_name}.tgz"

                  if [ "$OBJECT_TYPE" == "custom_function" ]; then
                      adjusted_files=("${paired_files[@]/custom_functions\//}")
                      cd custom_functions
                      eval tar -czvf $tarball_path "${adjusted_files[@]}"
                      cd ../
                  else
                      eval tar -czvf $tarball_path "${paired_files[@]}"
                  fi

                  # Call the SOAR publish Python backend
                  echo "Running command: python3 utils/soar_publish.py --input_file \"$tarball_path\" --dest_target=\"$DEST_API_URL\" --dest_token=\"$DEST_API_TOKEN\" --dest_scm_name=\"$DEST_SCM_NAME\" --object_type \"$OBJECT_TYPE\""
                  python3 utils/soar_publish.py --input_file "$tarball_path" --dest_target="$DEST_API_URL" --dest_token="$DEST_API_TOKEN" --dest_scm_name="$DEST_SCM_NAME" --object_type "$OBJECT_TYPE"
              fi
          done
