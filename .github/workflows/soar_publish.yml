name: Splunk SOAR publish

on:
  push:
    branches:
      - staging
      - main

jobs:
  build_release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - run: echo "job automatically triggered by a ${{ github.event_name }} event."

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Loop through parent commits of the git merge commit and publish to the target SOAR
        env:
          SOAR_STAGING_DEST_API_URL: ${{ vars.SOAR_STAGING_DEST_API_URL }}
          SOAR_STAGING_DEST_API_TOKEN: ${{ secrets.SOAR_STAGING_DEST_API_TOKEN }}
          SOAR_STAGING_DEST_SCM_NAME: ${{ vars.SOAR_STAGING_DEST_SCM_NAME }}
          SOAR_PROD_DEST_API_URL: ${{ vars.SOAR_PROD_DEST_API_URL }}
          SOAR_PROD_DEST_API_TOKEN: ${{ secrets.SOAR_PROD_DEST_API_TOKEN }}
          SOAR_PROD_DEST_SCM_NAME: ${{ vars.SOAR_PROD_DEST_SCM_NAME }}
        run: |
          echo "Inspection git branch ${{ github.ref }}"
          echo "Inspection git commit ${{ github.sha }}"
          echo "running command: git branch -v"
          git branch -v
          echo "running command: git status"
          git status
          echo "running command git log --pretty=%P -n 1 ${{ github.sha }}"
          git log --pretty=%P -n 1 ${{ github.sha }}
          echo ""
          commit_details=$(git log --pretty=%P -n 1 ${{ github.sha }})
          echo "commit details: $commit_details"
          DEST_API_URL=""
          DEST_API_TOKEN=""
          DEST_SCM_NAME=""

          # Check if we are on the 'staging' branch
          if [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
              DEST_API_URL=$SOAR_STAGING_DEST_API_URL
              DEST_API_TOKEN=$SOAR_STAGING_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_STAGING_DEST_SCM_NAME
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              DEST_API_URL=$SOAR_PROD_DEST_API_URL
              DEST_API_TOKEN=$SOAR_PROD_DEST_API_TOKEN
              DEST_SCM_NAME=$SOAR_PROD_DEST_SCM_NAME
          else
              echo "Invalid branch. This workflow is only for 'staging' or 'main' branches."
              exit 1
          fi

          for parent in $commit_details; do
              echo "Handling git commit id: $parent"
              echo "running command git show"
              git show --name-only --pretty="" $parent

              # Fetch modified files in the commit
              files=$(git show --name-only --pretty="" $parent | grep -E '\.json$|\.py$')
              echo "files: $files"

              # If no relevant files found, continue to next commit
              if [ -z "$files" ]; then
                  echo "No relevant files found for commit id: $parent"
                  continue
              else
                  echo "list of updated files for commit id $parent:"
                  echo "$files"
              fi

          done

          exit 0
