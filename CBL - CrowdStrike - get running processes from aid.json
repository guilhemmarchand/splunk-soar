{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "CrowdStrike",
    "coa": {
        "data": {
            "description": "This playbook is designed to retrieve the list of active processed on a given endpoint using CrowdStrike",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_4",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_4_to_port_5",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_5_to_port_3",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "id": "port_3_to_port_7",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_7_to_port_8",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "8",
                    "targetPort": "8_in"
                },
                {
                    "id": "port_8_to_port_9",
                    "sourceNode": "8",
                    "sourcePort": "8_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_9_to_port_1",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_5_to_port_10",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_11",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_11_to_port_1",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "9f004959e783d5a48886a9de467e3954154484d1",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 190,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 190,
                    "y": 1328
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Format comment failed connect",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "format_comment_failed_connect",
                        "id": "10",
                        "parameters": [
                            "filtered-data:filter_for_aid:condition_1:artifact:*.cef.destinationAid"
                        ],
                        "template": "%%\nCrowdStrike get running processes could not be executed, session was not estabilished successfully {0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "10",
                    "type": "format",
                    "x": 340,
                    "y": 1016
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "Add comment failed",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "add_comment_failed",
                        "id": "11",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_comment_failed_connect:formatted_data.*"
                            }
                        }
                    },
                    "errors": {},
                    "id": "11",
                    "type": "utility",
                    "x": 340,
                    "y": 1180
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Filter for AID",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.destinationAid",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "If aid",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_for_aid",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "x": 230,
                    "y": 148
                },
                "3": {
                    "data": {
                        "action": "run admin command",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Get running processes from CrowdStrike",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrikefalcon"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "get_running_processes_from_crowdstrike",
                        "id": "3",
                        "parameters": {
                            "command": "ps",
                            "device_id": "filtered-data:filter_for_aid:condition_1:artifact:*.cef.destinationAid",
                            "session_id": "create_crowdstrike_session:action_result.data.*.resources.*.session_id"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "command"
                            },
                            {
                                "data_type": "string",
                                "field": "device_id"
                            },
                            {
                                "data_type": "string",
                                "field": "session_id"
                            }
                        ],
                        "tab": "byConnector",
                        "type": "action"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "action",
                    "x": -1.4210854715202004e-14,
                    "y": 672
                },
                "4": {
                    "data": {
                        "action": "create session",
                        "actionType": "generic",
                        "advanced": {
                            "customName": "Create CrowdStrike session",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "CrowdStrike OAuth API",
                        "connectorConfigs": [
                            "crowdstrikefalcon"
                        ],
                        "connectorId": "ae971ba5-3117-444a-8ac5-6ce779f3a232",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "create_crowdstrike_session",
                        "id": "4",
                        "parameters": {
                            "device_id": "filtered-data:filter_for_aid:condition_1:artifact:*.cef.destinationAid"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "device_id"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "4",
                    "type": "action",
                    "x": 170,
                    "y": 327.99999999999994
                },
                "5": {
                    "data": {
                        "advanced": {
                            "customName": "Check for session result",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "create_crowdstrike_session:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "if success",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "if failed",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "check_for_session_result",
                        "id": "5",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "decision",
                    "x": 250,
                    "y": 492
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "Check for command result",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "==",
                                        "param": "get_running_processes_from_crowdstrike:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "If success",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "functionId": 2,
                        "functionName": "check_for_command_result",
                        "id": "7",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "decision",
                    "x": 80,
                    "y": 836
                },
                "8": {
                    "data": {
                        "advanced": {
                            "customName": "Format comment",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "format_comment",
                        "id": "8",
                        "parameters": [
                            "filtered-data:filter_for_aid:condition_1:artifact:*.cef.destinationAid"
                        ],
                        "template": "%%\nRunning processes were successfully retrieved via CrowdStrike for device id {0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "8",
                    "type": "format",
                    "x": 0,
                    "y": 1024
                },
                "9": {
                    "data": {
                        "advanced": {
                            "customName": "Add comment",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "add_comment",
                        "id": "9",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_comment:formatted_data.*"
                            }
                        }
                    },
                    "errors": {},
                    "id": "9",
                    "type": "utility",
                    "x": 0,
                    "y": 1180
                }
            },
            "notes": ""
        },
        "input_spec": null,
        "output_spec": null,
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.6",
        "version": "5.3.1.84890"
    },
    "create_time": "2023-09-20T08:48:50.511602+00:00",
    "draft_mode": false,
    "labels": [
        "splunk_events"
    ],
    "tags": []
}