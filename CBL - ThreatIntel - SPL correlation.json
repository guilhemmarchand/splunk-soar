{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Threat Response",
    "coa": {
        "data": {
            "description": "This playbook is designed to be triggered by the master playbook, it will perform several correlation in Splunk data sources to be consolidated for the analyst decision purposes",
            "edges": [
                {
                    "id": "port_0_to_port_2",
                    "sourceNode": "0",
                    "sourcePort": "0_out",
                    "targetNode": "2",
                    "targetPort": "2_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_2_to_port_4",
                    "sourceNode": "2",
                    "sourcePort": "2_out",
                    "targetNode": "4",
                    "targetPort": "4_in"
                },
                {
                    "id": "port_3_to_port_5",
                    "sourceNode": "3",
                    "sourcePort": "3_out",
                    "targetNode": "5",
                    "targetPort": "5_in"
                },
                {
                    "id": "port_7_to_port_9",
                    "sourceNode": "7",
                    "sourcePort": "7_out",
                    "targetNode": "9",
                    "targetPort": "9_in"
                },
                {
                    "id": "port_11_to_port_12",
                    "sourceNode": "11",
                    "sourcePort": "11_out",
                    "targetNode": "12",
                    "targetPort": "12_in"
                },
                {
                    "id": "port_12_to_port_10",
                    "sourceNode": "12",
                    "sourcePort": "12_out",
                    "targetNode": "10",
                    "targetPort": "10_in"
                },
                {
                    "id": "port_10_to_port_1",
                    "sourceNode": "10",
                    "sourcePort": "10_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                },
                {
                    "id": "port_13_to_port_14",
                    "sourceNode": "13",
                    "sourcePort": "13_out",
                    "targetNode": "14",
                    "targetPort": "14_in"
                },
                {
                    "id": "port_15_to_port_16",
                    "sourceNode": "15",
                    "sourcePort": "15_out",
                    "targetNode": "16",
                    "targetPort": "16_in"
                },
                {
                    "id": "port_9_to_port_17",
                    "sourceNode": "9",
                    "sourcePort": "9_out",
                    "targetNode": "17",
                    "targetPort": "17_in"
                },
                {
                    "id": "port_5_to_port_18",
                    "sourceNode": "5",
                    "sourcePort": "5_out",
                    "targetNode": "18",
                    "targetPort": "18_in"
                },
                {
                    "id": "port_14_to_port_19",
                    "sourceNode": "14",
                    "sourcePort": "14_out",
                    "targetNode": "19",
                    "targetPort": "19_in"
                },
                {
                    "id": "port_16_to_port_21",
                    "sourceNode": "16",
                    "sourcePort": "16_out",
                    "targetNode": "21",
                    "targetPort": "21_in"
                },
                {
                    "id": "port_17_to_port_11",
                    "sourceNode": "17",
                    "sourcePort": "17_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_18_to_port_11",
                    "sourceNode": "18",
                    "sourcePort": "18_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_19_to_port_11",
                    "sourceNode": "19",
                    "sourcePort": "19_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_21_to_port_11",
                    "sourceNode": "21",
                    "sourcePort": "21_out",
                    "targetNode": "11",
                    "targetPort": "11_in"
                },
                {
                    "id": "port_4_to_port_23",
                    "sourceNode": "4",
                    "sourcePort": "4_out",
                    "targetNode": "23",
                    "targetPort": "23_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_7",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "7",
                    "targetPort": "7_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_3",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "3",
                    "targetPort": "3_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_13",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "13",
                    "targetPort": "13_in"
                },
                {
                    "conditions": [
                        {
                            "index": 0
                        }
                    ],
                    "id": "port_23_to_port_15",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "15",
                    "targetPort": "15_in"
                },
                {
                    "conditions": [
                        {
                            "index": 1
                        }
                    ],
                    "id": "port_23_to_port_28",
                    "sourceNode": "23",
                    "sourcePort": "23_out",
                    "targetNode": "28",
                    "targetPort": "28_in"
                },
                {
                    "id": "port_28_to_port_29",
                    "sourceNode": "28",
                    "sourcePort": "28_out",
                    "targetNode": "29",
                    "targetPort": "29_in"
                },
                {
                    "id": "port_29_to_port_1",
                    "sourceNode": "29",
                    "sourcePort": "29_out",
                    "targetNode": "1",
                    "targetPort": "1_in"
                }
            ],
            "hash": "2fbc6773b60ef4a9539fa1ab2ecfd6da05a85a03",
            "nodes": {
                "0": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionName": "on_start",
                        "id": "0",
                        "type": "start"
                    },
                    "errors": {},
                    "id": "0",
                    "type": "start",
                    "x": 620,
                    "y": -6.394884621840902e-14
                },
                "1": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "on_finish",
                        "id": "1",
                        "type": "end"
                    },
                    "errors": {},
                    "id": "1",
                    "type": "end",
                    "userCode": "\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n",
                    "x": 790,
                    "y": 1608
                },
                "10": {
                    "data": {
                        "advanced": {
                            "customName": "Add note SPL results",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "add_note_spl_results",
                        "id": "10",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "add_note": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "title",
                                        "name": "title",
                                        "placeholder": "Enter a note title",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "description": "",
                                        "label": "content",
                                        "name": "content",
                                        "placeholder": "Enter the note content",
                                        "renderType": "datapath",
                                        "required": false
                                    },
                                    {
                                        "choices": [
                                            "markdown",
                                            "html"
                                        ],
                                        "default": "markdown",
                                        "description": "",
                                        "label": "note format",
                                        "name": "note_format",
                                        "placeholder": "Enter the note content",
                                        "renderType": "dropdown",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "default": "general",
                                        "hidden": true,
                                        "name": "note_type",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "event_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "task_id",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add note",
                                "name": "add_note"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "add_note": {
                                "_internal": [
                                    "container",
                                    "note_type",
                                    "author",
                                    "event_id",
                                    "task_id",
                                    "trace"
                                ],
                                "content": "format_note_spl_results_content:formatted_data.*",
                                "note_format": "markdown",
                                "note_type": "general",
                                "title": "format_note_spl_results_title:formatted_data.*"
                            }
                        }
                    },
                    "errors": {},
                    "id": "10",
                    "type": "utility",
                    "x": 510,
                    "y": 1460
                },
                "11": {
                    "data": {
                        "advanced": {
                            "customName": "Format note SPL results title",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 5,
                        "functionName": "format_note_spl_results_title",
                        "id": "11",
                        "parameters": [
                            "filtered-data:filter_af_for_url:condition_1:artifact:*.cef.requestURL"
                        ],
                        "template": "%%\nSplunk correlation results for URL: {0}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "11",
                    "type": "format",
                    "x": 510,
                    "y": 1132
                },
                "12": {
                    "data": {
                        "advanced": {
                            "customName": "Format note SPL results content",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 6,
                        "functionName": "format_note_spl_results_content",
                        "id": "12",
                        "parameters": [
                            "run_spl_query_crowdstrike:action_result.data.*._raw",
                            "run_spl_query_paloalto:action_result.data.*._raw",
                            "run_spl_query_netskope:action_result.data.*._raw",
                            "run_spl_query_mimecast:action_result.data.*._raw"
                        ],
                        "template": "%%\n**CrowdStrike** results: {0}, **PaloAlto** results: {1}, **NetSkope** results: {2}, **Mimecast** results: {3}\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "12",
                    "type": "format",
                    "x": 510,
                    "y": 1296
                },
                "13": {
                    "data": {
                        "advanced": {
                            "customName": "Format SPL query NetSkope",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "format_spl_query_netskope",
                        "id": "13",
                        "parameters": [
                            "parse_url:custom_function_result.data.netloc"
                        ],
                        "template": "%%\nindex=sec_netskope \"{0}\" | stats min(_time) as _time, count, values(app) as app, values(category) as category, dc(src) as dcount_src, dc(dest) as dcount_dest, dc(user) as dcount_user | foreach app category [ eval <<FIELD>> = mvjoin('<<FIELD>>', \", \") ] | eval summary=if(count>0, \"Results were found in NetSkope for the domain \" . \"{0}\", \"No results were found in NetSkope for the domain \" . \"{0}\") | tojson\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "13",
                    "type": "format",
                    "x": 680,
                    "y": 656
                },
                "14": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run SPL query NetSkope",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunkes"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 3,
                        "functionName": "run_spl_query_netskope",
                        "id": "14",
                        "parameters": {
                            "command": "search",
                            "end_time": "now",
                            "query": "format_spl_query_netskope:formatted_data.*",
                            "start_time": "-30d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "14",
                    "type": "action",
                    "x": 680,
                    "y": 828
                },
                "15": {
                    "data": {
                        "advanced": {
                            "customName": "Format SPL query Mimecast",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 2,
                        "functionName": "format_spl_query_mimecast",
                        "id": "15",
                        "parameters": [
                            "parse_url:custom_function_result.data.netloc"
                        ],
                        "template": "%%\nindex=sec_mimecast \"{0}\" sender!=\"portal@digitalshadows.com\" | eval action=lower(coalesce(action, Act)), direction=lower(coalesce(direction, Dir)), subject=coalesce(subject, Subject), recipient=coalesce(recipient, orig_recipient, Rcpt) | stats values(sourcetype) as sourcetype, count as count, values(action) as action, values(direction) as direction, dc(message_id) as dcount_message_id, dc(Sender) as dcount_sender, dc(recipient) as dcount_recipient, values(Sender) as senders, values(recipient) as recipients, dc(subject) as dcount_subject, dc(dest) as dcount_dest, dc(user) as dcount_user, sum(size) as total_size, sum(SpamScore) as total_spam_score | fillnull value=0 total_size, total_span_score | foreach action direction senders recipients [ eval <<FIELD>> = mvjoin('<<FIELD>>', \", \") ] | eval summary=if(count>0, \"Results were found in Mimecast for the domain \" . \"{0}\", \"No results were found in Mimecast for the domain \" . \"{0}\") | tojson\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "15",
                    "type": "format",
                    "x": 1020,
                    "y": 656
                },
                "16": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run SPL query Mimecast",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunkes"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 4,
                        "functionName": "run_spl_query_mimecast",
                        "id": "16",
                        "parameters": {
                            "command": "search",
                            "end_time": "now",
                            "query": "format_spl_query_mimecast:formatted_data.*",
                            "start_time": "-30d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "tab": "byConnector",
                        "type": "action"
                    },
                    "errors": {},
                    "id": "16",
                    "type": "action",
                    "x": 1020,
                    "y": 828
                },
                "17": {
                    "data": {
                        "advanced": {
                            "customName": "Add comment PaloAlto",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "add_comment_paloalto",
                        "id": "17",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "run_spl_query_paloalto:action_result.data.*.summary"
                            }
                        }
                    },
                    "errors": {},
                    "id": "17",
                    "type": "utility",
                    "x": 0,
                    "y": 984
                },
                "18": {
                    "data": {
                        "advanced": {
                            "customName": "Add comment CrowdStrike",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 4,
                        "functionName": "add_comment_crowdstrike",
                        "id": "18",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "run_spl_query_crowdstrike:action_result.data.*.summary"
                            }
                        }
                    },
                    "errors": {},
                    "id": "18",
                    "type": "utility",
                    "x": 340,
                    "y": 984
                },
                "19": {
                    "data": {
                        "advanced": {
                            "customName": "Add comment NetSkope",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": null,
                        "functionId": 5,
                        "functionName": "add_comment_netskope",
                        "id": "19",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "run_spl_query_netskope:action_result.data.*.summary"
                            }
                        }
                    },
                    "errors": {},
                    "id": "19",
                    "type": "utility",
                    "x": 680,
                    "y": 984
                },
                "2": {
                    "data": {
                        "advanced": {
                            "customName": "Filter AF for URL",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "artifact:*.cef.requestURL",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "If requestUrl",
                                "logic": "and"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "filter_af_for_url",
                        "id": "2",
                        "type": "filter"
                    },
                    "errors": {},
                    "id": "2",
                    "type": "filter",
                    "x": 660,
                    "y": 148
                },
                "21": {
                    "data": {
                        "advanced": {
                            "customName": "Add comment Mimecast",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 7,
                        "functionName": "add_comment_mimecast",
                        "id": "21",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "run_spl_query_mimecast:action_result.data.*.summary"
                            }
                        }
                    },
                    "errors": {},
                    "id": "21",
                    "type": "utility",
                    "x": 1020,
                    "y": 984
                },
                "23": {
                    "data": {
                        "advanced": {
                            "customName": "Check for netloc",
                            "customNameId": 0,
                            "join": []
                        },
                        "conditions": [
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 0,
                                        "op": "!=",
                                        "param": "parse_url:custom_function_result.data.netloc",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 0,
                                "customName": "If netloc",
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "comparisons": [
                                    {
                                        "conditionIndex": 1,
                                        "op": "==",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "conditionIndex": 1,
                                "customName": "netloc exaction failed",
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "functionId": 1,
                        "functionName": "check_for_netloc",
                        "id": "23",
                        "type": "decision"
                    },
                    "errors": {},
                    "id": "23",
                    "type": "decision",
                    "x": 680,
                    "y": 476
                },
                "28": {
                    "data": {
                        "advanced": {
                            "customName": "Format comment netloc failed",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 9,
                        "functionName": "format_comment_netloc_failed",
                        "id": "28",
                        "parameters": [
                            "filtered-data:filter_af_for_url:condition_1:artifact:*.cef.requestURL",
                            "parse_url:custom_function_result.data.netloc"
                        ],
                        "template": "%%\nFailed to extract the netloc from url=\"{0}\" with returned value=\"{1}\"\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "28",
                    "type": "format",
                    "x": 1200,
                    "y": 1296
                },
                "29": {
                    "data": {
                        "advanced": {
                            "join": []
                        },
                        "functionId": 8,
                        "functionName": "add_comment_8",
                        "id": "29",
                        "selectMore": false,
                        "tab": "apis",
                        "type": "utility",
                        "utilities": {
                            "comment": {
                                "description": "",
                                "fields": [
                                    {
                                        "description": "",
                                        "label": "comment",
                                        "name": "comment",
                                        "placeholder": "Enter a comment",
                                        "renderType": "datapath",
                                        "required": true
                                    },
                                    {
                                        "hidden": true,
                                        "name": "container",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "author",
                                        "required": false
                                    },
                                    {
                                        "hidden": true,
                                        "name": "trace",
                                        "required": false
                                    }
                                ],
                                "label": "add comment",
                                "name": "comment"
                            }
                        },
                        "utilityType": "api",
                        "values": {
                            "comment": {
                                "_internal": [
                                    "container",
                                    "author",
                                    "trace"
                                ],
                                "comment": "format_comment_netloc_failed:formatted_data.*"
                            }
                        }
                    },
                    "errors": {},
                    "id": "29",
                    "type": "utility",
                    "x": 1200,
                    "y": 1460
                },
                "3": {
                    "data": {
                        "advanced": {
                            "customName": "Format SPL query CrowdStrike",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 1,
                        "functionName": "format_spl_query_crowdstrike",
                        "id": "3",
                        "parameters": [
                            "parse_url:custom_function_result.data.netloc"
                        ],
                        "template": "%%\nindex=\"sec_crowdstrike\" \"{0}\" DomainName=*{0}* | stats min(_time) as _time, values(aid) as aid, dc(aid) as count_endpoints, count as count, values(DomainName) as DomainName, latest(_raw) as last_event | eval summary=if(count>0, \"Results were found in CrowdStrike for the domain \" . \"{0}\", \"No results were found in CrowdStrike for the domain \" . \"{0}\") | tojson\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "3",
                    "type": "format",
                    "x": 340,
                    "y": 656
                },
                "4": {
                    "data": {
                        "advanced": {
                            "customName": "Parse URL",
                            "customNameId": 0,
                            "join": []
                        },
                        "customFunction": {
                            "draftMode": false,
                            "name": "url_parse",
                            "repoName": "local"
                        },
                        "functionId": 1,
                        "functionName": "parse_url",
                        "id": "4",
                        "selectMore": false,
                        "type": "utility",
                        "utilities": {
                            "url_parse": {
                                "description": "Separate a URL into its components using urlparse() from the urllib module of Python 3.",
                                "fields": [
                                    {
                                        "dataTypes": [
                                            "url"
                                        ],
                                        "description": "The URL to parse",
                                        "inputType": "item",
                                        "label": "input_url",
                                        "name": "input_url",
                                        "placeholder": "artifact:*.cef.requestUrl",
                                        "renderType": "datapath",
                                        "required": false
                                    }
                                ],
                                "label": "url_parse",
                                "name": "url_parse"
                            }
                        },
                        "utilityType": "custom_function",
                        "values": {
                            "url_parse": {
                                "input_url": "filtered-data:filter_af_for_url:condition_1:artifact:*.cef.requestURL"
                            }
                        }
                    },
                    "errors": {},
                    "id": "4",
                    "type": "utility",
                    "x": 600,
                    "y": 328
                },
                "5": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run SPL query CrowdStrike",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunkes"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 1,
                        "functionName": "run_spl_query_crowdstrike",
                        "id": "5",
                        "parameters": {
                            "command": "search",
                            "end_time": "now",
                            "query": "format_spl_query_crowdstrike:formatted_data.*",
                            "start_time": "-30d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "type": "action"
                    },
                    "errors": {},
                    "id": "5",
                    "type": "action",
                    "x": 340,
                    "y": 820
                },
                "7": {
                    "data": {
                        "advanced": {
                            "customName": "Format SPL query PaloAlto",
                            "customNameId": 0,
                            "join": []
                        },
                        "functionId": 3,
                        "functionName": "format_spl_query_paloalto",
                        "id": "7",
                        "parameters": [
                            "parse_url:custom_function_result.data.netloc"
                        ],
                        "template": "%%\nindex=\"sec_paloalto\" sourcetype=\"pan:*\" \"{0}\" | stats values(sourcetype) as sourcetype, count as count, count(eval(action=\"allowed\")) as count_allowed, count(eval(action!=\"failure\")) as count_failures, sum(bytes) as bytes, sum(bytes_in) as bytes_in, sum(bytes_out) as bytes_out, dc(src) as dcount_src, dc(dest) as dcount_dest, dc(user) as dcount_user, values(app) as app, values(client_location) as client_location\n | foreach app client_location [ eval <<FIELD>> = mvjoin('<<FIELD>>', \", \") ] | eval summary=if(count>0, \"Results were found in PaloAlto for the domain \" . \"{0}\", \"No results were found in PaloAlto for the domain \" . \"{0}\") | tojson\n%%",
                        "type": "format"
                    },
                    "errors": {},
                    "id": "7",
                    "type": "format",
                    "x": -1.4210854715202004e-14,
                    "y": 656
                },
                "9": {
                    "data": {
                        "action": "run query",
                        "actionType": "investigate",
                        "advanced": {
                            "customName": "Run SPL query PaloAlto",
                            "customNameId": 0,
                            "join": []
                        },
                        "connector": "Splunk",
                        "connectorConfigs": [
                            "splunkes"
                        ],
                        "connectorId": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "connectorVersion": "v1",
                        "functionId": 2,
                        "functionName": "run_spl_query_paloalto",
                        "id": "9",
                        "parameters": {
                            "command": "search",
                            "end_time": "now",
                            "query": "format_spl_query_paloalto:formatted_data.*",
                            "start_time": "-30d"
                        },
                        "requiredParameters": [
                            {
                                "data_type": "string",
                                "field": "query"
                            },
                            {
                                "data_type": "string",
                                "default": "search",
                                "field": "command"
                            }
                        ],
                        "tab": "byConnector",
                        "type": "action"
                    },
                    "errors": {},
                    "id": "9",
                    "type": "action",
                    "x": 0,
                    "y": 828
                }
            },
            "notes": "- Requires requestUrl in the artifact\n- Uses the url_parse custom function to extract the netloc from the requestUrl"
        },
        "input_spec": null,
        "output_spec": [
            {
                "contains": [],
                "datapaths": [
                    "format_note_spl_results_content:formatted_data.*"
                ],
                "deduplicate": false,
                "description": "Splunk correlation results",
                "metadata": {},
                "name": "summary"
            }
        ],
        "playbook_type": "automation",
        "python_version": "3",
        "schema": "5.0.6",
        "version": "5.3.1.84890"
    },
    "create_time": "2023-09-20T08:52:22.675190+00:00",
    "draft_mode": false,
    "labels": [
        "splunk_events"
    ],
    "tags": []
}